host_acc=config['reference_genome']['filename']

rule all_kraken2:
    input: expand("kraken2/{sample}/report.txt",sample=list(read_naming.keys()))

sample_suffix=list(read_naming.values())
if len(sample_suffix[0])==2:
    paired=True
else:
    paired=False

if paired==True:
    rule kraken2_PE_reads:
        conda: pipeline_path + "envs/kraken2.yml"

        input: f"decontaminated-reads/{host_acc}/{{sample}}_R1.fq"
               f"decontaminated-reads/{host_acc}/{{sample}}_R2.fq"

        output: classified_r1="kraken2/{sample}/reads/classified_reads_1.fq",
                classified_r2="kraken2/{sample}/reads/classified_reads_2.fq",
                unclassified_r1="kraken2/{sample}/reads/unclassified_reads_1.fq",
                unclassified_r2="kraken2/{sample}/reads/unclassified_reads_2.fq",
                all="kraken2/{sample}/output.txt",
                report="kraken2/{sample}/report.txt"

        threads: config["num_cores"]

        params: db_path=config["kraken_database"]

        log: logging_folder + "kraken2/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/kraken2.benchmark.txt"

        shell: "kraken2 --db {params.db_path} --threads {threads} --paired --output {output.all} \
                --classified-out kraken2/{wildcards.sample}/reads/classified_reads#.fq --unclassified-out kraken2/{wildcards.sample}/reads/unclassified_reads#.fq \
                --report {output.report} {input[0]} {input[1]} &>> {log}"

else:
    rule kraken2_SE_reads:
        conda: pipeline_path + "envs/kraken2.yml"

        input: expand("decontaminated-reads/{host_acc}/{{sample}}_single.fq",host_acc=config['reference_genome']['filename'])

        output: classified="kraken2/{sample}/reads/classified_reads.fq",
                unclassified="kraken2/{sample}/reads/unclassified_reads.fq",
                all="kraken2/{sample}/output.txt",
                report="kraken2/{sample}/report.txt"

        threads: config["num_cores"]

        params: db_path=config["kraken_database"]

        log: logging_folder + "kraken2/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/kraken2.benchmark.txt"

        shell: "kraken2 --db {params.db_path} --threads {threads} --output {output.all} --unclassified-out {output.unclassified} \
                --classified-out {output.classified} --report {output.report} {input[0]}"

