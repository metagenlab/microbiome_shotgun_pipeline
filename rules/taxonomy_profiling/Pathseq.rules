rule all_Pathseq:
    input: expand("Pathseq/output/{sample}/scores.txt",sample=list(read_naming.keys()))

rule untrimmed_fastq_to_bam:
    singularity: "docker://broadinstitute/gatk:4.1.3.0"

    input: r1="samples/{sample}/reads/raw/{sample}_R1.fastq.gz",
           r2="samples/{sample}/reads/raw/{sample}_R2.fastq.gz"

    output: "Pathseq/{sample}.bam"

    shell: "gatk FastqToSam -F1 {input.r1} -F2 {input.r2} -O {output} -SM {wildcards.sample}"

rule build_host_kmer:
    singularity: "docker://broadinstitute/gatk:4.1.3.0"

    input: "host/{host_acc}.fa"

    output: "PathseqDB/custom/{host_acc}.bfi"

    params: kmer_size=config["kmer_size"],kmer_mask=config["kmer_mask"]

    shell: 'gatk PathSeqBuildKmers -R {input} -O {output} -P 0.0001 --java-options "-Xmx60g"'


rule classify_reads:
    singularity: "docker://broadinstitute/gatk:4.1.3.0"

    input: bam="Pathseq/{sample}.bam",
           host_kmer="PathseqDB/pathseq_host.bfi",
           host_ind="PathseqDB/pathseq_host.fa.img",
           microbe_fa="PathseqDB/pathseq_microbe.fa",
           microbe_ind="PathseqDB/pathseq_microbe.fa.img",
           microbe_dict="PathseqDB/pathseq_microbe.dict",
           tax_db="PathseqDB/pathseq_taxonomy.db"

    output: score_out="Pathseq/output/{sample}/scores.txt",
            bam_out="Pathseq/output/{sample}/output_reads.bam",
            filter_met="Pathseq/output/{sample}/filter_metrics.txt",
            score_met="Pathseq/output/{sample}/score_metrics.txt"

    params: min_clip_len=config["min_clip_len"],
            min_score=config["min_score_identity"],
            margin=config["identity_margin"]

    threads: 32

    shell:
        """
        gatk PathSeqPipelineSpark --input {input.bam} \
                                  --kmer-file {input.host_kmer} \
                                  --filter-bwa-image {input.host_ind} \
                                  --microbe-bwa-image {input.microbe_ind} \
                                  --microbe-fasta {input.microbe_fa} \
                                  --taxonomy-file {input.tax_db} \
                                  --min-clipped-read-length {params.min_clip_len} \
                                  --min-score-identity {params.min_score} \
                                  --identity-margin {params.margin} \
                                  --scores-output {output.score_out} \
                                  --output {output.score_out} \
                                  --filter-metrics {output.filter_met} \
                                  --score-metrics {output.score_met}
        """



