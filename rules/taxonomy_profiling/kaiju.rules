rule all_kaiju:
    input: expand("kaiju/{sample}_summary.tsv",sample=list(read_naming.keys())),
            expand("kaiju/{sample}.txt",sample=list(read_naming.keys()))

rule kaiju_on_reads:
    conda: pipeline_path + "envs/kaiju.yml"

    input: expand("unmapped/{host_acc}/{sample}_R{rp}.fq",host_acc=config['reference_genome']['filename'],\
                  rp=['1','2'],sample=list(read_naming.keys()))

    output: temp("kaiju/{sample}.out")

    threads: 20

    params: nodes=config["nodes_dmp"],db=config["kaiju_database"]

    shell: "kaiju -z {threads} -t {params.nodes} -f {params.db} -i {input[0]} -j {input[1]} -o {output}"

rule add_taxa_names_to_output:
    conda: pipeline_path + "envs/kaiju.yml"

    input: "kaiju/{sample}.out"

    output: "kaiju/{sample}.txt"

    params: nodes=config["nodes_dmp"],names=config["names_dmp"]

    shell: "kaiju-addTaxonNames -t {params.nodes} -n {params.names} -r superkingdom,phylum,class,order,family,genus,species -i {input} -o {output}"


rule classification_summary:
    conda: pipeline_path + "envs/kaiju.yml"

    input: "kaiju/{sample}.out"

    output: "kaiju/{sample}_summary.tsv"

    params: nodes=config["nodes_dmp"],names=config["names_dmp"]

    shell: "kaiju2table -t {params.nodes} -n {params.names} -r species -l superkingdom,phylum,class,order,family,genus,species -o {output} {input}"


