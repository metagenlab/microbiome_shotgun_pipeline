rule all_kaiju:
    input: expand("kaiju/{sample}/summary.tsv",sample=list(read_naming.keys())),
            expand("kaiju/{sample}/kaiju.txt",sample=list(read_naming.keys()))


if paired:
    rule kaiju_PE_reads:
        conda: pipeline_path + "envs/kaiju.yml"

        input: r1=fasta_input_list[0],
               r2=fasta_input_list[1]

        output: "kaiju/{sample}/kaiju.out"

        threads: config["num_cores"]

        params: nodes=config["nodes_dmp"],
                db=config["kaiju_database"]

        log: logging_folder + "kaiju/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/kaiju.benchmark.txt"

        shell: "kaiju -z {threads} -t {params.nodes} -f {params.db} -i {input.r1} -j {input.r2} -o {output} -v &> {log}"
else:
    rule kaiju_SE_reads:
        conda: pipeline_path + "envs/kaiju.yml"

        input: get_fasta_input

        output: "kaiju/{sample}/kaiju.out"

        threads: config["num_cores"]

        params: nodes=config["nodes_dmp"],
                db=config["kaiju_database"]

        log: logging_folder + "kaiju/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/kaiju.benchmark.txt"

        shell: "kaiju -z {threads} -t {params.nodes} -f {params.db} -i {input} -o {output} -v &> {log}"

rule kaiju_add_taxa_names_to_output:
    conda: pipeline_path + "envs/kaiju.yml"

    input: "kaiju/{sample}/kaiju.out"

    output: "kaiju/{sample}/kaiju.txt"

    params: nodes=config["nodes_dmp"],
            names=config["names_dmp"]

    shell: "kaiju-addTaxonNames -t {params.nodes} -n {params.names} -r superkingdom,phylum,class,order,family,genus,species -i {input} -o {output}"


rule kaiju_classification_summary:
    conda: pipeline_path + "envs/kaiju.yml"

    input: "kaiju/{sample}/kaiju.out"

    output: "kaiju/{sample}/summary.tsv"

    params: nodes=config["nodes_dmp"],
            names=config["names_dmp"]

    shell: "kaiju2table -t {params.nodes} -n {params.names} -r species -e -l superkingdom,phylum,class,order,family,genus,species -o {output} {input}"


