rule all_motus:
    input: expand("motus/{sample}/profiled_{sample}.tsv",sample=list(read_naming.keys()))


if paired:
    rule motus_PE_reads:
        conda: pipeline_path + "envs/motus.yml"

        input:  r1=fasta_input_list[0],
                r2=fasta_input_list[1]

        output: txt="motus/{sample}/profiled_{sample}.txt"

        threads: config["num_cores"]

        log: logging_folder + "motus/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/motus.benchmark.txt"

        shell:
             """
             motus profile -f {input.r1} -r {input.r2} -n {wildcards.sample} -p -c -t {threads} > {output} 2> {log}
             """
else:
    rule motus_SE_reads:
        conda: pipeline_path + "envs/motus.yml"

        input:  r1=get_fasta_input

        output: txt="motus/{sample}/profiled_{sample}.txt"

        threads: config["num_cores"]

        log: logging_folder + "motus/{sample}.log"

        benchmark: "benchmark/resources_usage/{sample}/motus.benchmark.txt"

        shell:
             """
             motus profile -s {input.r1} -n {wildcards.sample} -p -c -t {threads} > {output} 2> {log}
             """

rule get_motus_table:
    input: "motus/{sample}/profiled_{sample}.txt"

    output: "motus/{sample}/profiled_{sample}.tsv"

    shell: "tail -n+3 {input} > {output}"