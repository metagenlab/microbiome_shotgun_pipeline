

rule extract_read_counts:
    input:
        "samples/{sample}/reads/trimmed/fastqc/{pair}_paired_fastqc/fastqc_data.txt",
    output:
        "samples/{sample}/reads/trimmed/fastqc/{pair}_paired_fastqc/{pair}_reads_count.txt"
    shell:
       """
       echo sed 's/.*:Total Sequences\\t//'
       grep "Total Sequences" {input[0]} | sed 's/.*:Total Sequences\\t//' > {output[0]}
       """

rule calculate_RPKM:
    conda:
        "../../envs/python-r.yml"
    singularity:
        "docker://metagenlab/microbiome-shotgun-pipeline:1.0"
    params:
        config["local_samples"]
    input:
        sample_list = expand("samples/{sample}/mmseq_search/{{data_type}}/{{db_name}}/best_hits.m8", sample=read_naming.keys()),
        R1_counts = expand("samples/{sample}/reads/trimmed/fastqc/R1_paired_fastqc/R1_reads_count.txt", sample=read_naming.keys()),
        R2_counts = expand("samples/{sample}/reads/trimmed/fastqc/R2_paired_fastqc/R2_reads_count.txt", sample=read_naming.keys()),
        reference_fasta = "reference_databases/{data_type}/{db_name}.faa",
    output:
        "report/mmseq_search/{data_type}/{db_name}/RPKM.db"
    script: "scripts/calculate_RPKM.py"


rule add_annotation_virulence:
    conda:
        "../../envs/python-r.yml"
    singularity:
        "docker://metagenlab/microbiome-shotgun-pipeline:1.0"
    input:
        virulence_database = "databases/virulence/sqlite_db/virulence.db",
        RPKM_database = "report/mmseq_search/virulence/VF_db/RPKM.db",
    output:
        "report/mmseq_search/virulence/VF_db/annotation.log"
    script: "scripts/virulence_annotation.py"


rule add_annotation_resistance:
    conda:
        "../../envs/python-r.yml"
    singularity:
        "docker://metagenlab/microbiome-shotgun-pipeline:1.0"
    input:
        aro_index = "reference_databases/resistance/aro_index.tsv",
        aro = "reference_databases/resistance/aro.tsv",
        aro_categories_index = "reference_databases/resistance/aro_categories_index.tsv",
        RPKM_database = "report/mmseq_search/resistance/CARD_protein_homolog_model/RPKM.db",
    output:
        "report/mmseq_search/resistance/CARD_protein_homolog_model/annotation.log"
    script: "scripts/resistance_annotation.py"
