
rule all_decontam:
    input: expand("unmapped/{host_acc}/{sample}_R{rp}.fq",rp=['1','2'],sample=list(read_naming.keys()),host_acc=config['reference_genome']['filename'])

rule decompress_reference_genome:
    input: "host/{host_acc}.fna.gz"

    output: temp("host/{host_acc}.fa")

    shell: "zcat {input} > {output}"

if config['reference_genome']['host']=='human':
    index_alg='bwtsw'
else:
    index_alg='is'
rule index_reference_genome:
    conda: pipeline_path + "envs/bwa-samtools.yml"

    input: "host/{host_acc}.fa"

    output: "host/{host_acc}.fa.amb","host/{host_acc}.fa.pac","host/{host_acc}.fa.ann",
            "host/{host_acc}.fa.bwt","host/{host_acc}.fa.sa"

    params: algorithm=index_alg, mem=config["indexing_mem"]

    shell: "bwa index -b {params.mem} -a {params.algorithm} {input}"

rule align_reads_to_reference_genome:
    conda: pipeline_path + "envs/bwa-samtools.yml"

    input: r1="samples/{sample}/reads/trimmed/R1_paired.fastq",
            r2="samples/{sample}/reads/trimmed/R2_paired.fastq",
            host_fa="host/{host_acc}.fa"

    output: temp("host/{host_acc}/{sample}.bam")

    threads: 20

    shell:
        """
        bwa mem -M -t {threads} {input.host_fa} {input.r1} {input.r2} | samtools sort -n -O BAM -o {output}
        """

#rule get_mapped_reads:
#    conda: pipeline_path + "envs/bwa-samtools.yml"

#    input: "host/{filename}_{sample}.bam"

#    output: "host/{filename}_{sample}_mapped.bam"

#    shell: "samtools view -b -F 4 {input} | samtools sort -O BAM -o {output}"

rule get_unmapped_reads:
    conda: pipeline_path + "envs/bwa-samtools.yml"

    input: "host/{host_acc}/{sample}.bam"

    output: "unmapped/{host_acc}/{sample}.bam"

    shell: "samtools view -b -f 4 {input} > {output}"

rule bam_to_fastq:
    conda: pipeline_path + "envs/bedtools.yml"

    input: "unmapped/{host_acc}/{sample}.bam"

    output: "unmapped/{host_acc}/{sample}_R1.fq",
            "unmapped/{host_acc}/{sample}_R2.fq"

    shell: "bedtools bamtofastq -i {input} -fq {output[0]} -fq2 {output[1]}"