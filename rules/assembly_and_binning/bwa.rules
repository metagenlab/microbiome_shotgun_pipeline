rule map_paired_reads_with_bwa:
    conda:
        pipeline_path + "envs/bwa-samtools.yml"
    params:
        platform = "ILLUMINA"
    input:
        fastq1 = "samples/{sample}/reads/trimmed/R1_paired.fastq",
        fastq2 = "samples/{sample}/reads/trimmed/R2_paired.fastq",
        ref = "samples/{sample}/assembly/spades/large_contigs_edit.fasta",
        ref_index = "samples/{sample}/assembly/spades/large_contigs_edit.fasta.bwt",
    output:
        temp("samples/{sample}/mapping/bwa/{ref}.bam"),
    log:
        logging_folder+"samples/{sample}/logs/mapping/bwa/{ref}/log.txt"
    shell:
        """
        if ls {output[0]}.tmp* 1> /dev/null 2>&1
        then
             rm {output[0]}.tmp*
        fi
        (bwa mem -R '@RG\\tID:{wildcards.sample}\\tSM:{wildcards.sample}\\tPL:{params.platform}' {input[ref]} {input[fastq1]} {input[fastq2]} -v 1 | samtools sort -O BAM -o {output[0]}) 2> {log}
        """

rule map_single_reads_with_bwa:
    conda:
        pipeline_path + "envs/bwa-samtools.yml"
    params:
        platform = "ILLUMINA"
    input:
        fastq = "samples/{sample}/reads/trimmed/single.fastq",
        ref = "samples/{sample}/assembly/spades/large_contigs_edit.fasta",
        ref_index = "samples/{sample}/assembly/spades/large_contigs_edit.fasta.bwt",
    output:
        temp("samples/{sample}/mapping/bwa/{ref}.bam"),
    log:
        logging_folder+"samples/{sample}/logs/mapping/bwa/{ref}/log.txt"
    shell:
        """
        if ls {output[0]}.tmp* 1> /dev/null 2>&1
        then
             rm {output[0]}.tmp*
        fi
        (bwa mem -R '@RG\\tID:{wildcards.sample}\\tSM:{wildcards.sample}\\tPL:{params.platform}' {input[ref]} {input[fastq]} -v 1 | samtools sort -O BAM -o {output[0]}) 2> {log}
        """

rule extract_contig_coverage:
    input:
        # report/qualimap/{sample}/{mapping_method}/{ref}/
        genome_cov = "report/qualimap/{sample}/{mapping_method}/{sample}_assembled/genome_results.txt"
    output:
        extract = "samples/{sample}/{mapping_method}/{sample}_assembled/contig_coverage.txt"
    shell:
        """
        sed -ne '/Coverage per contig/,$ p'  {input[genome_cov]} | grep NODE_ | sed "s/^[ \\t]*//" > {output[extract]}
        """

rule index_reference_fasta:
    conda:
        pipeline_path + "envs/bwa-samtools.yml"
    input:
        "{any_genome}.fasta"
    output:
        "{any_genome}.fasta.fai",
        "{any_genome}.fasta.bwt",
    shell:
        """
        samtools faidx {input[0]} &> /dev/null
        bwa index {input[0]} &>> /dev/null
        """

rule index_bam_file:
    conda:
        pipeline_path +  "envs/bwa-samtools.yml"
    input:
        "{any_bam}.bam"
    output:
        temp("{any_bam}.bam.bai"),
    shell:
        """
        samtools index {input[0]}
        """
