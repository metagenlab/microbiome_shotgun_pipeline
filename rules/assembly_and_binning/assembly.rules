
rule correct_error_paired_reads_with_spades:
    conda:
        "../../envs/spades.yml"
    singularity:
        "docker://quay.io/biocontainers/spades:3.13.1--h2d02072_2"
    threads:
        16
    resources:
        mem_gb=120
    input:
        R1_trimmed = "samples/{sample}/reads/trimmed/R1_paired.fastq",
        R2_trimmed = "samples/{sample}/reads/trimmed/R2_paired.fastq",
    output:
        R1_corrected = temp("samples/{sample}/reads/corrected/R1_paired.00.0_0.cor.fastq.gz"),
        R2_corrected = temp("samples/{sample}/reads/corrected/R2_paired.00.0_0.cor.fastq.gz"),
        single_corrected = temp("samples/{sample}/reads/corrected/R_unpaired.00.0_0.cor.fastq.gz"),
    log:
        logging_folder + "samples/{sample}/logs/spades_read_correction.txt"
    shell:
         """
         spades.py --only-error-correction -1 {input[R1_trimmed]} -2 {input[R2_trimmed]} -o $(dirname $(dirname {output[0]})) --threads {threads} -m {resources.mem_gb} > {log}
         """

rule correct_error_single_reads_with_spades:
    conda:
        "../../envs/spades.yml"
    singularity:
        "docker://quay.io/biocontainers/spades:3.13.1--h2d02072_2"
    threads:
        16
    input:
        single_trimmed = "samples/{sample}/reads/trimmed/single.fastq",
    output:
        single_corrected = temp("samples/{sample}/reads/corrected/single.00.0_0.cor.fastq.gz")
    log:
        logging_folder + "samples/{sample}/logs/spades_read_correction.txt"
    shell:
         """
         spades.py --only-error-correction  -s {input[single_trimmed]} -o $( dirname $(dirname {output[single_corrected]})) --threads {threads} > {log}
"""


rule assemble_metagenome_corrected_paired_reads_with_spades:
    conda:
        "../../envs/spades.yml"
    singularity:
        "docker://quay.io/biocontainers/spades:3.13.1--h2d02072_2"
    threads:
        16
    resources:
        mem_gb=160
    input:
        R1_corrected = "samples/{sample}/reads/corrected/R1_paired.00.0_0.cor.fastq.gz",
        R2_corrected = "samples/{sample}/reads/corrected/R2_paired.00.0_0.cor.fastq.gz",
        single_corrected = "samples/{sample}/reads/corrected/R_unpaired.00.0_0.cor.fastq.gz",
    output:
        contigs = "samples/{sample}/assembly/spades/contigs.fasta",
        graph = "samples/{sample}/assembly/spades/assembly_graph.fastg",
        scaffolds = "samples/{sample}/assembly/spades/scaffolds.fasta",
        contigs_paths = "samples/{sample}/assembly/spades/contigs.paths",
        scaffolds_paths = "samples/{sample}/assembly/spades/scaffolds.paths",
    log:
        logging_folder + "samples/{sample}/logs/spades_assembly.txt"
    shell:
        """
        spades.py --only-assembler -k 21,33,55,77,99,127 --meta -1 {input[R1_corrected]} -2 {input[R2_corrected]} -s {input[single_corrected]} -o $( dirname {output[contigs]}) --threads {threads} -m {resources.mem_gb} > {log}
        """

rule fasta_filter_size:
    conda:
        "../../envs/python-r.yml"
    singularity:
        "docker://metagenlab/microbiome-shotgun-pipeline:1.0"
    input:
        contigs = "samples/{sample}/assembly/spades/contigs.fasta"
    output:
        large_contigs = "samples/{sample}/assembly/spades/large_contigs.fasta"
    params:
        config["minimum_contig_size"]
    log:
        logging_folder + "samples/{sample}/logs/spades_assembly.txt"
    shell:
        "awk '/^>/{{print (NR==1)?$0: \"\\n\" $0;next}} {{printf \"%s\", $0}}END{{print \"\"}}' {input} |  awk \'!/^>/ {{ next }} {{ getline seq }} length(seq) >= {params[0]} {{ print $0 \"\\n\" seq }}\'  > {output}"

rule fasta_edit_header:
    conda:
        "../../envs/python-r.yml"
    singularity:
        "docker://metagenlab/microbiome-shotgun-pipeline:1.0"
    input:
        contigs = "samples/{sample}/assembly/spades/large_contigs.fasta"
    output:
        edited_contigs = "samples/{sample}/assembly/spades/large_contigs_edit.fasta"
    params:
        config["minimum_contig_size"]
    log:
        logging_folder + "samples/{sample}/logs/spades_assembly.txt"
    shell:
        """
        sed 's/_length.*//' {input[0]}  > {output[0]}
        """
